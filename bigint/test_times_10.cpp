// bigint Test Program
//
// Tests:  times_10, uses ==
//
// NEED TO IMPLEMENT
//
#include <iostream>
#include <cassert>
#include "bigint.hpp"

//===========================================================================
int main () {
    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(3);
	bi.debugPrint(std::cout);

        // Test 
        bi = bi.times10(1);
	bi.debugPrint(std::cout);
        // Verify
        assert(bi == 30);
    }

    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi(37);

      // Test
      bi = bi.times10(3);

      // Verify
      assert(bi == 37000);
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi(645);

      // Test
      bi = bi.times10(4);

      // Verify
      assert(bi == 6450000);
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi(4232);

      // Test
      bi = bi.times10(6);
      bi.debugPrint(std::cout);
      // Verify
      assert(bi == 4232000000);
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi(753841);

      // Test
      bi = bi.times10(8);

      // Verify
      assert(bi == "75384100000000");
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi(94138547);

      // Test
      bi = bi.times10(1);

      // Verify
      assert(bi == 941385470);
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi("120165035410");

      // Test
      bi = bi.times10(9);

      // Verify
      assert(bi == "120165035410000000000");
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi(8);

      // Test
      bi = bi.times10(20);

      // Verify
      assert(bi == "800000000000000000000");
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi("541356713385712355410358");

      // Test
      bi = bi.times10(18);

      // Verify
      assert(bi == "541356713385712355410358000000000000000000");
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi("654732136871032106871321357100654703246840321687");

      // Test
      bi = bi.times10(1);

      // Verify
      assert(bi == "6547321368710321068713213571006547032468403216870");
    }
    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi("9870210687432106873210687602130687321035765103216873021324687302138768403216");

      // Test
      bi = bi.times10(30);

      // Verify
      assert(bi == "9870210687432106873210687602130687321035765103216873021324687302138768403216000000000000000000000000000000");
    }

    {
      //------------------------------------------------------
      // Setup fixture
      bigint bi("68416354698713210684103651065840320003856403687697832163873213867321");

      // Test
      bi = bi.times10(90);

      // Verify
      assert(bi == "68416354698713210684103651065840320003856403687697832163873213867321000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    }

    //Add test cases as needed.

    std::cout << "Done testing times_10" << std::endl;
}

